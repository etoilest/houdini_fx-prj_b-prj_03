int handle = metastart(chs("meta"), @P);

vector vortexf = 0;
vector edgef = 0;

while (metanext(handle)){
    float tmp, weight,edge, vortex;
    vector vtmp, dir, cur_vortex, cur_edge = 0;
    matrix mtmp, xform = 1;
    
    if (metaimport(handle, "dir", @P, vtmp))
        dir = vtmp;
        
    if (metaimport(handle, "fedge", @P, tmp))
        edge = tmp;
        
    if (metaimport(handle, "fvortex", @P, tmp))
        vortex = tmp;
        
    if (metaimport(handle, "meta:density", @P, tmp))
        weight = tmp;
        
    if (metaimport(handle, "meta:transform", @P, mtmp))
        xform = mtmp;
    
    vector pp = @P * invert(xform);
    cur_vortex = normalize(cross(dir, pp)) * vortex * weight;
    cur_edge = dir * edge * weight;
    
    vortexf += cur_vortex * matrix3(xform);
    edgef += cur_edge * matrix3(xform);
}
@v += vortexf + edgef;